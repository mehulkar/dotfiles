[init]
  defaultBranch = main
[core]
  pager = less -R
  fsmonitor = true
[alias]
  t       = tag -n99
  r       = remote -v
  d       = diff
  co      = checkout
  dc      = diff --cached
  s       = status
  st      = status
  br      = for-each-ref --sort=-committerdate --format="%(committerdate:relative)%09%(objectname:short)%09%(refname:short)" refs/heads
  b       = branch
  bra     = branch -a
  brm     = branch --merged
  l       = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
  ll      = log --date=format-local:'%Y-%m-%d %H:%M:%S %z' --pretty=format:'%Cgreen(%cd)%Creset %Cred%h%Creset -%C(yellow)%d%Creset %s %C(bold blue)<%an>%Creset'
  last    = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'--abbrev-commit --date=relative -1
  unstage = reset HEAD
  pr      = remote prune
  redo    = reset --soft 'HEAD^'
  pu      = pull upstream main
  cbr     = rev-parse --abbrev-ref HEAD
  pbr     = pull origin '$(git cbr)'
  del-merged = "!f() { git branch --merged | grep -v '\\*\\|master\\|main\\$' | xargs -n 1 git branch --delete;  }; f"
  added   = log --follow --date=short --pretty=format:%ad --diff-filter=A --
  up      = "!f() { git del-merged && git pr origin; }; f"
  rbi     = rebase -i
  cp      = cherry-pick
  mdlog   = log --pretty=md
  prco    = "!f() { git fetch -fu ${2:-origin} refs/pull/$1/head:pr/$1 && git checkout pr/$1; }; f"
  pick    = !git log -300 --oneline --color $1 | fzf -m --ansi --preview 'git show --color {1}' | awk '{print $1}'
[color]
  ui = true
  relativePaths = false
[help]
  autocorrect = 1
[push]
	default = current
[branch]
  autosetuprebase=always
[core]
	editor = /usr/bin/vim
[remote]
  pushDefault = origin
[user]
  name = Mehul Kar
  email = github@mehulkar.com
[pretty]
  md = tformat:- %C(bold)%C(yellow)%h %C(brightblue)%s%Creset%n%w(0,2,2)%+b%-C()%n
[pull]
	rebase = true
[advice]
	skippedCherryPicks = false
[fetch]
	writeCommitGraph = true
